<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--使用外部属性配置文件-->
    <properties resource="jdbc.properties"/>
    <!--全局设置，添加日志-->
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>
    <!--声明别名-->
    <typeAliases>
        <!--第一种语法格式
        type:java类型的全限定名称
        alias：自定义别名
        -->
<!--        <typeAlias type="com.dyssl.domain.Student" alias="stu" />-->
        <!--第二种方式
        name:包名，mybatis会把这个包中的所有类名当作别名（不用区分大小写）
        -->
        <package name="com.dyssl.domain" />
    </typeAliases>
    <!--配置环境-->
    <!--声明插件-->
    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor" />
    </plugins>
    <environments default="development">
        <!--表示一个数据库的连接信息-->
        <environment id="development">
            <!--事务管理器-->
            <transactionManager type="JDBC"/>
            <!--配置数据源,创建connection对象。-->
            <dataSource type="POOLED">
                <!--驱动-->
                <property name="driver" value="${jdbc.driver}"/>
                <!--链接数据库url-->
                <property name="url"
                          value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.value}"/>
            </dataSource>
        </environment>
    </environments>
    <!--指定其他mapper文件的位置,编译以后在target/class路径下-->
    <mappers>
        <!--第一种方式，resouces=“mapper”文件的路径-->
<!--        <mapper resource="com\dyssl\dao\StudentDao.xml"/>-->
        <!--第二种方式，使用《package》 name:mapper文件所在的包名
        使用要求，mapper文件和dao接口在同一目录
        mapper文件和dao接口的名称完全一致
        -->
        <package name="com.dyssl.dao" />
    </mappers>
</configuration>