<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dyssl.dao.StudentDao">
    <!--parameterType:指定dao接口形参的类型
    这个属性的值可以使用java类型的全限定名称或者mybatis定义的别名
    mybatis通过反射机制可以获取dao接口的参数类型，可以不写
    -->
    <select id="selectStudentById" parameterType="java.lang.Integer"
            resultType="com.dyssl.domain.Student">
        select id,name,email,age from student where id=#{studentId}
    </select>
    <select id="selectStudentByEmail" resultType="com.dyssl.domain.Student">
        select id,name,email,age from student where email=#{studentemail}
    </select>
    <select id="selectStudentByNameOrAge" resultType="com.dyssl.domain.Student">
        select id,name,email,age from student where name = #{studentName} or age = #{studentAge}
    </select>
    <!--java对象作为方法的参数，使用此对象的属性作为参数值使用
    简单的语法：#{属性名}，mybatis调用此属性的getxxx（）方法获取属性值
    -->
    <select id="selectStudentByObject" resultType="com.dyssl.domain.Student">
        select id,name,email,age from student where name = #{name} and age = #{age}
    </select>
    <select id="selectStudentByQueryParam" resultType="com.dyssl.domain.Student">
        select id,name,email,age from student where name = #{p1} and age = #{p2}
    </select>
    <select id="selectStudentByMap" resultType="com.dyssl.domain.Student">
        select id,name,email,age from student where name = #{studentName} and age = #{studentAge}
    </select>
    <update id="updateStudent">
        update student set age = #{age} where id = #{id}
    </update>
    <select id="queryStudent" resultType="com.dyssl.domain.Student">
        select * from student where name = ${studentName}
    </select>
    <select id="queryStudentOrderById" resultType="com.dyssl.domain.Student">
        select * from student order by id
    </select>
    <select id="queryStudentByColName" resultType="student">
        select * from student order by ${colName}
    </select>
</mapper>
